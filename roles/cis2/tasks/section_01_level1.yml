---
#
# Copyright 2014 Major Hayden
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
  - name: Create /etc/modprobe.d/CIS.conf with root ownership & mode
    file: path=/etc/modprobe.d/CIS.conf state=touch owner=root group=root mode=0600
    changed_when: false
    tags:
      - scored
      - section1.1
      - section1.1.1.1
      - section1.1.1.2
      - section1.1.1.3
      - section1.1.1.4
      - section1.1.1.5
      - section1.1.1.6
      - section1.1.1.7
      - section1.1.1.8

  - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install cramfs /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.1

  - name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install freevxfs /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.2

  - name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install jffs2 /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.3

  - name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install hfs /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.4

  - name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install hfsplus /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.4

  - name: 1.1.1.6 Ensure mounting of squashfs filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install squashfs /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.6

  - name: 1.1.1.7 Ensure mounting of udf filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install udf /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.7

  - name: 1.1.1.8 Ensure mounting of FAT filesystems is disabled (Scored)
    lineinfile: >
      state=present
      dest=/etc/modprobe.d/CIS.conf
      line="install vfat /bin/true"
    tags:
      - scored
      - section1.1
      - section1.1.1.8

  - name: 1.1.2 Ensure separate partition exists for /tmp (Scored)
    debug: msg="*** Manually create Separate Partition for /tmp."
    tags:
      - scored
      - section1.1
      - section1.1.2

  - name: 1.1.3 - 1.1.5 Set nodev,nosuid,noexec option for /tmp Partition (Scored)
    mount: >
      name="/tmp"
      src={{ item.device }}
      state=mounted
      fstype={{ item.fstype }}
      opts="nodev,nosuid,noexec"
    when: item.mount == "/tmp"
    with_items: ansible_mounts
    tags:
      - scored
      - section1.1
      - section1.1.3
      - section1.1.4
      - section1.1.5

  - name: 1.1.6 Ensure separate partition exists for /var (Scored)
    debug: msg="*** Manually create Separate Partition for /var."
    tags:
      - scored
      - section1.1
      - section1.1.6

  - name: 1.1.7 Ensure separate partition exists for /var/tmp (Scored)
    debug: msg="*** Manually create Separate Partition for /var/tmp."
    tags:
      - scored
      - section1.1
      - section1.1.7

  - name: 1.1.8 - 1.1.10 Set nodev,nosuid,noexec option for /var/tmp Partition (Scored)
    mount: >
      name="/var/tmp"
      src={{ item.device }}
      state=mounted
      fstype={{ item.fstype }}
      opts="nodev,nosuid,noexec"
    when: item.mount == "/var/tmp"
    with_items: ansible_mounts
    tags:
      - scored
      - section1.1
      - section1.1.8
      - section1.1.9
      - section1.1.10

  - name: 1.1.11 Ensure separate partition exists for /var/log (Scored)
    debug: msg="*** Manually create Separate Partition for /var/log."
    tags:
      - scored
      - section1.1
      - section1.1.11

  - name: 1.1.12 Ensure separate partition exists for /var/log/audit (Scored)
    debug: msg="*** Manually create Separate Partition for /var/log/audit."
    tags:
      - scored
      - section1.1
      - section1.1.12

  - name: 1.1.13 Ensure separate partition exists for /home (Scored)
    debug: msg="*** Manually create Separate Partition for /home."
    tags:
      - scored
      - section1.1
      - section1.1.13

  - name: 1.1.14 Ensure nodev option set on /home partition (Scored)
    mount: >
      name="/home"
      src={{ item.device }}
      state=mounted
      fstype={{ item.fstype }}
      opts="nodev"
    when: item.mount == "/home"
    with_items: ansible_mounts
    tags:
      - scored
      - section1.1
      - section1.1.14

  - name: 1.1.15 - 1.1.17 Add noexec Option to /dev/shm Partition (Scored)
    mount: >
      name="/dev/shm"
      src="none"
      state=mounted
      fstype="tmpfs"
      opts="nodev,nosuid,noexec"
    tags:
      - scored
      - section1.1
      - section1.1.15
      - section1.1.16
      - section1.1.17

  - name: 1.1.18 - 1.1.20 Ensure nodev,noexec,nosuid option set on removable media partitions (Not Scored)
    debug: msg="*** Not relevant."
    tags:
      - scored
      - section1.1
      - section1.1.18
      - section1.1.19
      - section1.1.20

  - name: 1.1.21 Ensure sticky bit is set on all world-writable directories (Scored)
    debug: msg="*** May be too destructive -- see notes"
    tags:
      - scored
      - section1.1
      - section1.1.21

  - name: 1.1.22 Disable Automounting (Scored)
    service: name=autofs enabled=no state=stopped
    ignore_errors: yes
    tags:
      - scored
      - section1.1
      - section1.1.22

  - name: 1.2.1 Ensure package manager repositories are configured (Not Scored)
    command: yum replist
    register: result
    failed_when: "result.rc == 1"
    when: ansible_distribution == "RedHat"
    tags:
      - notscored
      - section1.2
      - section1.2.1

  - name: 1.2.2 Ensure gpgcheck is globally activated (Scored)
    lineinfile: >
      state=present
      dest=/etc/yum.conf
      regexp=^gpgcheck=
      line=gpgcheck=1
    tags:
      - scored
      - section1.2
      - section1.2.2

  - name: 1.2.3 Ensure GPG keys are configured (Not Scored)
    command: rpm -q gpg-pubkey --qf '%{name}-%{version}-%{release} --> %{summary}\n'
    register: result123
    failed_when: "result123.rc == 1"
    when: ansible_distribution == "RedHat"
    tags:
      - notscored
      - section1.2
      - section1.2.2

  - name: 1.2.4 Ensure Red Hat Network or Subscription Manager connection is configured (Not Scored)
    debug: msg="*** Check manually."
    tags:
      - notscored
      - section1.2
      - section1.2.4

  - name: 1.3.1 Ensure AIDE is installed (Scored)
    yum: >
      name=aide
      state=present
    when: configure_aide
    tags:
      - scored
      - section1.3
      - section1.3.1

  - name: 1.3.1 Install AIDE (Initialize AIDE) (Scored)
    command: >
      /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
      creates=/var/lib/aide/aide.db.gz
    when: configure_aide
    tags:
      - scored
      - section1.3
      - section1.3.1

  - name: 1.3.2 Implement Periodic Execution of File Integrity (Scored)
    cron: >
      name="Run AIDE (CIS 1.3.2)"
      minute="0"
      hour="5"
      job="/usr/sbin/aide --check"
    when: configure_aide
    tags:
      - scored
      - section1.3
      - section1.3.2

  - name: 1.4.1 Ensure permissions on bootloader config are configured (Scored)
    file: >
      path=/boot/grub/grub.conf
      owner=root
      group=root
      mode=0400
      state=touch
    ignore_errors: yes
    tags:
      - scored
      - section1.4
      - section1.4.1

  - name: 1.4.2 Ensure bootloader password is set (Scored)
    debug: msg="*** Too destructive for production systems. Evaluate for your environment first."
    tags:
      - scored
      - section1.4
      - section1.4.2

  - name: 1.4.3 Ensure authentication required for single user mode (Not Scored)
    debug: msg="*** Too destructive for production systems. Evaluate for your environment first."
    tags:
      - notscored
      - section1.4
      - section1.4.3

  - name: 1.5.1 Ensure core dumps are restricted (Scored)
    lineinfile: >
      dest=/etc/security/limits.conf
      line="* hard core 0"
      insertafter=EOF
    tags:
      - scored
      - section1.5
      - section1.5.1

  - name: 1.5.1 Restrict core dumps (Scored) - via sysctl
    sysctl: >
      name=fs.suid_dumpable
      value=0
      state=present
      ignoreerrors=yes
    tags:
      - scored
      - section1.5
      - section1.5.1

  - name: 1.5.2 Ensure XD/NX support is enabled (Not Scored)
    debug: msg="*** check manually and docs"
    tags:
      - scored
      - section1.5
      - section1.5.2

  - name: 1.5.3 Ensure address space layout randomization (ASLR) is enabled (Scored)
    sysctl: >
      name=kernel.randomize_va_space
      value=2
      state=present
      ignoreerrors=yes
    tags:
      - scored
      - section1.5
      - section1.5.3

  - name: 1.5.4 Ensure prelink is disabled (Scored)
    yum: >
      name=prelink
      state=absent
    tags:
      - scored
      - section1.5
      - section1.5.4

  - name: 1.7.1 Command Line Warning Banners
    stat: path=/etc/{{ item }}
    register: stats
    with_items:
      - motd
      - issue
      - issue.net
    tags:
      - scored
      - section1.7.1

  - name: 1.7.1.1 - 1.7.1.3 Ensure message of the day is configured properly (Scored) 
    template: >
      src={{ item }}.j2
      dest=/etc/{{ item }}
    with_items:
      - motd
      - issue
      - issue.net
    when: ansible_distribution == "RedHat"
    tags:
      - scored
      - section1.7
      - section1.7.1.1
      - section1.7.1.2
      - section1.7.1.3

  - name: 1.7.1.4 - 1.7.1.6 Ensure permissions on /etc/motd, issue, issue.net are configured (Scored)
    file: >
      path=/etc/{{ item }}
      owner=root
      group=root
      mode=0644
    when: ansible_distribution == "RedHat"
    with_items:
      - motd
      - issue
      - issue.net
    tags:
      - notscored
      - section1.7
      - section1.7.1.4
      - section1.7.1.5
      - section1.7.1.6

  - name: 1.7.2 Ensure GDM login banner is configured (Scored)
    debug: msg="*** Will do later"
    tags:
      - scored
      - section1.7
      - section1.7.2

  - name: 1.8 Ensure updates, patches, and additional security software are installed (Not Scored)
    command: yum check-update
    register: result
    failed_when: "result.rc == 1"
    when: ansible_distribution == "RedHat"
    tags:
      - notscored
      - section1.8

