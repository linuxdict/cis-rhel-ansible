---
#
# Copyright 2014 Major Hayden
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

  - name: 5.1.1 Ensure cron daemon is enabled (Scored)
    service: >
      name=crond
      enabled=yes
      state=started
    tags:
      - scored
      - section5.1
      - section5.1.1

  - name: 5.1.2 - 5.1.7 Ensure permissions on cron related are correctly configured (Scored)
    file: >
      path=/etc/{{ item }}
      owner=root
      group=root
      mode=0600
    with_items:
      - crontab
      - cron.hourly
      - cron.daily
      - cron.weekly
      - cron.monthly
    tags:
      - scored
      - section5.1
      - section5.1.2
      - section5.1.3
      - section5.1.4
      - section5.1.5
      - section5.1.6
      - section5.1.7

  - name: 5.1.8 Ensure at/cron is restricted to authorized users (Scored)
    file: >
      path=/etc/{{ item }}
      state=absent
    with_items:
      - at.deny
      - cron.deny
    tags:
      - scored
      - section5.1
      - section5.1.8

  - name: 5.1.8 Ensure at/cron is restricted to authorized users (Scored)
    file: >
      path=/etc/{{ item }}
      state=touch
      owner=root
      group=root
      mode=0600
    with_items:
      - at.allow
      - cron.allow
    tags:
      - scored
      - section5.1
      - section5.1.8

  - name: 5.2.1 Ensure permissions on /etc/ssh/sshd_config are configured (Scored)
    file: >
      path=/etc/ssh/sshd_config
      owner=root
      group=root
      mode=0600
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.1

  - name: 5.2.2 Ensure SSH Protocol is set to 2 (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^Protocol " line="Protocol 2"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.2

  - name: 5.2.3 Ensure SSH LogLevel is set to INFO (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^LogLevel "
      line="LogLevel INFO"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.3

  - name: 5.2.4 Ensure SSH X11 forwarding is disabled (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^X11Forwarding "
      line="X11Forwarding no"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.4

  - name: 5.2.5 Ensure SSH MaxAuthTries is set to 4 or less (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^MaxAuthTries "
      line="MaxAuthTries 4"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.5

  - name: 5.2.6 Ensure SSH IgnoreRhosts is enabled (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^IgnoreRhosts "
      line="IgnoreRhosts yes"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.6

  - name: 5.2.7 Ensure SSH HostbasedAuthentication is disabled (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^HostbasedAuthentication "
      line="HostbasedAuthentication no"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.7

  - name: 5.2.8 Ensure SSH root login is disabled (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^PermitRootLogin "
      line="PermitRootLogin no"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.8

  - name: 5.2.9 Ensure SSH PermitEmptyPasswords is disabled (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^PermitEmptyPasswords "
      line="PermitEmptyPasswords no"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.9

  - name: 5.2.10 Ensure SSH PermitUserEnvironment is disabled (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^PermitUserEnvironment "
      line="PermitUserEnvironment no"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.10

  - name: 5.2.11 Ensure only approved ciphers are used (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^Ciphers "
      line="Ciphers aes128-ctr,aes192-ctr,aes256-ctr"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.11

  - name: 5.2.12 Ensure only approved MAC algorithms are used (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^MACs "
      line="MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.12

  - name: 5.2.13 Ensure SSH Idle Timeout Interval is configured (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^ClientAliveInterval "
      line="ClientAliveInterval 300"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.13

  - name: 5.2.13 Ensure SSH Idle Timeout Interval is configured (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^ClientAliveCountMax "
      line="ClientAliveCountMax 0"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.13

  - name: 5.2.14 Ensure SSH LoginGraceTime is set to one minute or less (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^LoginGraceTime "
      line="LoginGraceTime 60"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.14

  - name: 5.2.15 Ensure SSH access is limited (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^AllowGroups "
      line="AllowGroups {{ ssh_allow_groups }}"
    when: ssh_allow_groups is defined
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.15

  - name: 5.2.15 Ensure SSH access is limited (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config 
      regexp="^AllowUsers "
      line="AllowUsers {{ ssh_allow_users }}"
    when: ssh_allow_users is defined
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.15

  - name: 5.2.15 Ensure SSH access is limited (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^DenyGroups "
      line="DenyGroups {{ ssh_deny_groups }}"
    when: ssh_deny_groups is defined
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.15

  - name: 5.2.15 Ensure SSH access is limited (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^DenyUsers "
      line="DenyUsers {{ ssh_deny_users }}"
    when: ssh_deny_users is defined
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.15

  - name: 5.2.16 Ensure SSH warning banner is configured (Scored)
    lineinfile: >
      dest=/etc/ssh/sshd_config
      regexp="^Banner "
      line="Banner /etc/issue.net"
    notify: Reload sshd
    tags:
      - scored
      - section5.2
      - section5.2.16

  - name: 5.3 Ensure authconfig package is installed
    yum:
      name: authconfig
      state: present

  - name: 5.3.1 Ensure password creation requirements are configured (Scored)
    copy: >
      src=etc/pwquality.conf
      dest=/etc/security/pwquality.conf
    when: ansible_distribution_major_version == "7"
    tags:
      - scored
      - section5.3
      - section5.3.1

  - name: 5.3.1 - 5.3.4 Configure PAM (Scored)
    copy: >
      src=etc/pam.d/system-auth
      dest=/etc/pam.d/system-auth
    when: ansible_distribution_major_version == "6"
    tags:
      - scored
      - section5.3
      - section5.3.1
      - section5.3.2
      - section5.3.3
      - section5.3.4

  - name: 5.3.2 - 5.3.4 Configure PAM (Scored)
    copy: >
      src=etc/pam.d/password-auth
      dest=/etc/pam.d/password-auth
    when: ansible_distribution_major_version == "6"
    tags:
      - scored
      - section5.3
      - section5.3.1
      - section5.3.2
      - section5.3.3
      - section5.3.4

  - name: 5.4.1.1 Ensure password expiration is 90 days or less (Scored)
    lineinfile: >
      backup=yes
      state=present
      dest=/etc/login.defs
      backrefs=yes
      regexp="^PASS_MAX_DAYS\s+"
      line="PASS_MAX_DAYS\t90"
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.1

  - name: 5.4.1.2 Ensure minimum days between password changes is 7 or more (Scored)
    lineinfile: >
      backup=yes
      state=present
      dest=/etc/login.defs
      backrefs=yes
      regexp="^PASS_MIN_DAYS\s+"
      line="PASS_MIN_DAYS\t7"
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.2

  - name: 5.4.1.3 Ensure password expiration warning days is 7 or more (Scored)
    lineinfile: >
      backup=yes
      state=present
      dest=/etc/login.defs
      backrefs=yes
      regexp="^PASS_WARN_AGE\s+"
      line="PASS_WARN_AGE\t7"
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.3

  - name: 5.4.1.4 Ensure inactive password lock is 30 days or less (Scored)
    command: /usr/sbin/useradd -D -f 30
    when: lock_inactive
    tags:
      - scored
      - section5.4
      - section5.4.1
      - section5.4.1.4

  - name: 5.4.2 Ensure system accounts are non-login for RHEL6 (Scored)
    shell: awk -F':' '($3<500 && $1!="root" && $1!="sync" && $1!="shutdown" && $1!="sync" && $1!="shutdown" && $1!="halt" && $7!="/sbin/nologin") { print $1 }' /etc/passwd
    register: enabled_system_accounts
    when: ansible_distribution_major_version == "6"
    changed_when: false
    tags:
      - scored
      - section5.4
      - section5.4.2

  - name: 5.4.2 Ensure system accounts are non-login for RHEL6 (Scored)
    command: /usr/sbin/usermod -s /sbin/nologin {{ item }}
    with_items: enabled_system_accounts.stdout_lines
    when: ansible_distribution_major_version == "6"
    tags:
      - scored
      - section5.4
      - section5.4.2

  - name: 5.4.2 Ensure system accounts are non-login for RHEL7 (Scored)
    shell: awk -F':' '($3<1000 && $1!="root" && $1!="sync" && $1!="shutdown" && $1!="sync" && $1!="shutdown" && $1!="halt" && $7!="/sbin/nologin") { print $1 }' /etc/passwd
    register: enabled_system_accounts
    when: ansible_distribution_major_version == "7"
    changed_when: false
    tags:
      - scored
      - section5.4
      - section5.4.2

  - name: 5.4.2 Ensure system accounts are non-login for RHEL7 (Scored)
    command: /usr/sbin/usermod -s /sbin/nologin {{ item }}
    with_items: enabled_system_accounts.stdout_lines
    when: ansible_distribution_major_version == "7"
    tags:
      - scored
      - section5.4
      - section5.4.2

  - name: 5.4.3 Ensure default group for the root account is GID 0 (Scored)
    shell: /bin/awk -F':' '($3 == 0) { print $1 }' /etc/passwd | grep  'root'
    register: result5_4_3
    failed_when: result5_4_3.rc != 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section5.4
      - section5.4.3

  - name: 5.4.4 Ensure default user umask is 027 or more restrictive (Scored)
    debug: msg="*** Update it later"
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section5.4
      - section5.4.4

  - name: 5.5 Ensure root login is restricted to system console (Not Scored)
    debug: msg="*** Update it later"
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section5.5

  - name: 5.6 Ensure access to the su command is restricted (Scored)
    copy: >
      src=etc/pam.d/su
      dest=/etc/pam.d/su
    when: ansible_distribution_major_version == "6"
    tags:
      - scored
      - section5.6
